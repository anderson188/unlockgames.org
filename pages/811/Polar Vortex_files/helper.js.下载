"use strict";
var stripeQueryParam;
var stripeQueryParameters;
var serialize = function(obj) {
    var str = [];
    for (var p in obj)
        if (obj.hasOwnProperty(p)) {
            str.push(encodeURIComponent(p) + "=" + encodeURIComponent(obj[p]));
        }
    return str.join("&");
};
var getStripeDynamicCampaign = function() {
    var campaignsAll = {};
    var campaignPattern = /^campaigns\[[0-9]\]\[id]/i;
    var qtyPattern = /^campaigns\[[0-9]\]\[quantity]/i;
    var price = /^campaigns\[[0-9]\]\[price]/i;
    var inputsAll = document.getElementsByTagName('input');
    if (inputsAll.length > 0) {
        var i = 1;
        for (var j = 0; j < inputsAll.length; j++) {
            var snglInput = inputsAll[j];
            var nameAttr = snglInput.getAttribute('name');
            if (campaignPattern.test(nameAttr)) {
                if (!snglInput.hasAttribute('disabled')) {
                    campaignsAll['dynamic-campaign-id-' + i] = snglInput.value;
                    var quantityName = nameAttr.replace('id', 'quantity');
                    var quantityPrice = nameAttr.replace('id', 'price');
                    if (typeof document.getElementsByName(quantityName)[0] !== "undefined" && document.getElementsByName(quantityName)[0] !== null) {
                        campaignsAll['dynamic-campaign-quantity-' + i] = document.getElementsByName(quantityName)[0].value;
                        document.getElementsByName(quantityName)[0].setAttribute('onchange', "getStripeDynamicCampaign()");
                    } else {
                        campaignsAll['dynamic-campaign-quantity-' + i] = 0;
                    }
                    
                    if (typeof document.getElementsByName(quantityPrice)[0] !== "undefined" && document.getElementsByName(quantityPrice)[0] !== null) {
                        campaignsAll['dynamic-campaign-price-' + i] = document.getElementsByName(quantityPrice)[0].value;
                        document.getElementsByName(quantityPrice)[0].setAttribute('onchange', "getStripeDynamicCampaign()");
                    }
                    i += 1;
                }
                snglInput.setAttribute('onchange', "getStripeDynamicCampaign()");
            }
        }
        stripeQueryParam = serialize(campaignsAll);
        stripeQueryParameters = (typeof stripeQueryParam !== "undefined" && stripeQueryParam !== null) ? stripeQueryParam : "";
        // stripeQueryParameters = parseQueryString(stripeQueryParameters);
        getCampaignDetail(stripeQueryParameters);
        // Stripe Payment Update

    }
};

function parseQueryString(qs) {
    const items = qs.split('&');
    return items.reduce((data, item) => {
        const [key, value] = item.split('=');
        if (data[key] !== undefined) {
            if (!Array.isArray(data[key])) {
                data[key] = [data[key]]
            }
            data[key].push(value)
        } else {
            data[key] = value
        }
        return data
    }, {})
}

function getCampaignDetail(campaigns){

    $.ajax({
              url: app_config.offer_path + AJAX_PATH + 'extensions/stripe/get-campaign-details'+(campaigns ? '?'+campaigns : ''),
              headers: {
                    'Content-Type': 'application/json'
                },
              data: {
                    campaigns: campaigns
              },
              success: function(data) {
                //console.log(data);
                  updateCart(data);
          }
     });
}

function updateCart(data){
    paymentRequest.update({
      total: {
          amount : parseInt((data.amount).toFixed(0)),
          label : data.label
      }
    });
    stripeAmount = data.amount
    //stripeCampaignId = data.campaignId;
    
}